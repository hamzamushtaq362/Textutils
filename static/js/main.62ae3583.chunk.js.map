{"version":3,"sources":["My Components/Alert.js","My Components/Navbar.js","My Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","class","concat","type","role","msg","Navbar","className","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toogleMode","htmlFor","toogleGreenMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showalert","toLowerCase","split","reverse","join","length","defaultProps","App","message","setAlert","setTimeout","setMode","_useState3","_useState4","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.62ae3583.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type}`} role=\"alert\">\r\n  <strong>{props.alert.type} </strong> : {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/About\">{props.about}</Link> */}\r\n                <a className=\"nav-link\" href=\"/About\">{props.about}</a>\r\n\r\n              </li>\r\n              \r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n</div>\r\n\r\n<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input mx-1\" onClick={props.toogleGreenMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Green mode</label>\r\n</div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title : PropTypes.string.isRequired,\r\n  about : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Deafault Navbar'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handelupclick= ()=>{\r\n    // console.log('upper case was invoked' + text);\r\n    let newText= text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to upperCase\", 'success');\r\n  }\r\n\r\n  const handelloclick= ()=>{\r\n    // console.log('upper case was invoked' + text);\r\n    let newText= text.toLowerCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to LowerCase\", 'success');\r\n  }\r\n\r\n  const handelClearclick= ()=>{\r\n    // console.log('upper case was invoked' + text);\r\n    let newText= \" \";\r\n    setText(newText);\r\n    props.showalert(\"Screen Claered\", 'success');\r\n  }\r\n\r\n  const handelInverseclick= ()=>{\r\n    // console.log('upper case was invoked' + text);\r\n    let newText= text.split(\"\").reverse().join(\"\");\r\n    setText(newText);\r\n    props.showalert(\"converted to Inverse\", 'success');\r\n  }\r\n\r\n  const handleonchange= (event)=>{  \r\n    console.log('on change');\r\n    setText(event.target.value);\r\n  }\r\n\r\n  \r\n  \r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n\r\n\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n\r\n        \r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\" >\r\n        <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='light'?'white':'#121a3c'}} onChange={handleonchange} id=\"mybox\" rows=\"8\"></textarea>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handelupclick}>Click to upper</button>\r\n\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handelloclick}>Click to lower</button>\r\n\r\n        <button className=\"btn btn-primary my-3\r\n         mx-1\" onClick={handelClearclick}>Click Clear</button>\r\n\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handelInverseclick}>Click inversse</button>\r\n\r\n\r\n        </div>\r\n        </div>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n          <h1>Your Text</h1>\r\n          <p>Total Words {text.split(' ').length} Characters {text.length}</p>\r\n          <p>{0.008 * text.split(' ').length} Time </p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter Text to continue\"}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport Alert from './My Components/Alert';\r\n// import About from './My Components/About';\r\nimport Navbar from \"./My Components/Navbar\";\r\nimport TextForm from \"./My Components/TextForm\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link,\r\n//   Routes\r\n// } from \"react-router-dom\";\r\n\r\n\r\n// let name = \"Hamza\";\r\nfunction App() {\r\n\r\n  const showalert=(message, type)=>\r\n  {\r\n    setAlert({\r\n      msg: message,\r\n      type: type \r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1000);\r\n  }\r\n\r\n  const toogleMode= ()=>{\r\n    \r\n    if(mode=== 'light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor= '#121a3c';\r\n      showalert(\"Dark Mode Enabbled\", 'success');\r\n      // setInterval(() => {\r\n      //   document.title= \"Dark mode\"\r\n      // }, 1000);\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor= 'white';\r\n      showalert(\"Light Mode Enabbled\", 'success');\r\n      // setInterval(() => {\r\n      //   document.title= \"Light mode\"\r\n      // }, 1000);\r\n    }\r\n  }\r\n\r\n  const toogleGreenMode= ()=>{\r\n    \r\n    if(mode=== 'light')\r\n    {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor= '#236c23';\r\n      showalert(\"Dark Mode Enabbled\", 'success');\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor= 'white';\r\n      showalert(\"Light Mode Enabbled\", 'success');\r\n\r\n    }\r\n  }\r\n\r\n  const [mode, setMode]=useState('light');\r\n\r\n  const [alert, setAlert]=useState(null);\r\n\r\n  // const [green, setGreen] = useState('light')\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n      <Navbar title='Navbar' about='About US' mode={mode} toogleMode={toogleMode} toogleGreenMode={toogleGreenMode}/>\r\n      \r\n      <Alert alert={alert}/>\r\n\r\n      <div className=\"container my-3\">\r\n        <TextForm showalert={showalert} heading=\"Please type here\" mode={mode}/>\r\n        {/* <About/> */}\r\n\r\n        {/* <Routes>\r\n\r\n        <Route path=\"/\" element={<TextForm showalert={showalert} heading=\"Please type here\" mode={mode}/>} />\r\n\r\n        <Route path=\"/About\" element={<About/>} />\r\n\r\n      </Routes> */}\r\n\r\n      </div>\r\n      {/* </Router> */}\r\n\r\n    </>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}